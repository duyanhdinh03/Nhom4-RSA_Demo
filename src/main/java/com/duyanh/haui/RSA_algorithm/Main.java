package com.duyanh.haui.RSA_algorithm;


import java.io.File;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Base64;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jsoup.Jsoup;
import org.jsoup.safety.Whitelist;

/**
 *
 * @author Admin
 */
public class Main extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;

    private final String cipherFileTxt = "D:\\banma.txt";
    private final String plainFileTxt = "D:\\banro.txt";
    private final String cipherFileDocx = "D:\\banma.docx";
    private final String plainFileDocx = "D:\\banro.docx";
    private final JFileChooser jFileChooser;
    private File fileSelected;

    private static final int NUMBITS = 2048;
    String publicKey;
    String privateKey;
    RSA rsa;
    FileUtils fileUtils = new FileUtils();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();

        jFileChooser = new JFileChooser();
        jFileChooser.setCurrentDirectory(new File("D:\\"));
        jFileChooser.setFileFilter(new FileNameExtensionFilter(".txt", "txt"));
        jFileChooser.setFileFilter(new FileNameExtensionFilter(".docx", "docx"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        privateKeyTx = new javax.swing.JTextArea();
        generateKeyButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        publicKeyTx = new javax.swing.JTextArea();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        encryptedTextTx = new javax.swing.JTextArea();
        encryptedButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        chooseFileBtn1 = new javax.swing.JButton();
        jToolBar3 = new javax.swing.JToolBar();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        decryptButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        encryptedTextTx1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        chooseFileBtn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jToolBar1.setRollover(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Public key  ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Private key ");

        privateKeyTx.setColumns(20);
        privateKeyTx.setRows(5);
        jScrollPane1.setViewportView(privateKeyTx);
        privateKeyTx.setLineWrap(true);

        generateKeyButton.setBackground(new java.awt.Color(204, 204, 204));
        generateKeyButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        generateKeyButton.setText("Generate key");
        generateKeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKeyButtonActionPerformed(evt);
            }
        });

        publicKeyTx.setColumns(20);
        publicKeyTx.setRows(5);
        jScrollPane3.setViewportView(publicKeyTx);
        publicKeyTx.setLineWrap(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 464, Short.MAX_VALUE)
                .addComponent(generateKeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateKeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.add(jPanel3);

        jTabbedPane1.addTab("Key", jToolBar1);

        jToolBar2.setRollover(true);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Plain text");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Cipher text");

        encryptedTextTx.setColumns(20);
        encryptedTextTx.setRows(5);
        jScrollPane7.setViewportView(encryptedTextTx);
        encryptedTextTx.setLineWrap(true);

        encryptedButton.setBackground(new java.awt.Color(204, 204, 204));
        encryptedButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        encryptedButton.setText("Encrypt");
        encryptedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptedButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jEditorPane1);
        jEditorPane1.setContentType("text/html");

        chooseFileBtn1.setBackground(new java.awt.Color(204, 204, 204));
        chooseFileBtn1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chooseFileBtn1.setText("Choose file");
        chooseFileBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chooseFileBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(encryptedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane7)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseFileBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encryptedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar2.add(jPanel5);

        jTabbedPane1.addTab("Encrypt", jToolBar2);

        jToolBar3.setRollover(true);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Plain text");

        decryptButton.setBackground(new java.awt.Color(204, 204, 204));
        decryptButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        decryptButton.setText("Decrypt");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Cipher text");

        encryptedTextTx1.setColumns(20);
        encryptedTextTx1.setRows(5);
        jScrollPane9.setViewportView(encryptedTextTx1);
        encryptedTextTx1.setLineWrap(true);

        jScrollPane4.setViewportView(jEditorPane2);
        jEditorPane2.setContentType("text/html");

        chooseFileBtn2.setBackground(new java.awt.Color(204, 204, 204));
        chooseFileBtn2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chooseFileBtn2.setText("Choose file");
        chooseFileBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileBtn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(480, 480, 480)
                        .addComponent(chooseFileBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(430, 430, 430)
                            .addComponent(decryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(chooseFileBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar3.add(jPanel4);

        jTabbedPane1.addTab("Decrypt", jToolBar3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKeyButtonActionPerformed
        // TODO add your handling code here:
        rsa = new RSA(NUMBITS);
        String publicKeyComponent = Base64.getEncoder().encodeToString(rsa.getPublicKey().getComponent().toByteArray());
        String publicKeyModulus = Base64.getEncoder().encodeToString(rsa.getPublicKey().getModulus().toByteArray());
        publicKey = "{" + publicKeyComponent + ", " + publicKeyModulus + "}";
//        publicKey = "{" + rsa.getPublicKey().getComponent() + ", " + rsa.getPublicKey().getModulus() + "}";

        String privateKeyComponent = Base64.getEncoder().encodeToString(rsa.getPrivateKey().getComponent().toByteArray());
        String privateKeyModulus = Base64.getEncoder().encodeToString(rsa.getPrivateKey().getModulus().toByteArray());
        privateKey = "{" + privateKeyComponent + ", " + privateKeyModulus + "}";
//        privateKey = "{" + rsa.getPrivateKey().getComponent() + ", " + rsa.getPrivateKey().getModulus() + "}";

        publicKeyTx.setText(publicKey);
        privateKeyTx.setText(privateKey);
    }//GEN-LAST:event_generateKeyButtonActionPerformed

    private void encryptedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptedButtonActionPerformed
        // TODO add your handling code here:
        if (publicKeyTx.getText().isEmpty() || publicKeyTx.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Public key is required!!!");
        } else {
            encrypt();
        }
    }//GEN-LAST:event_encryptedButtonActionPerformed

    private void chooseFileBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileBtn1ActionPerformed
        // TODO add your handling code here:
        String data = "";
        int returnValue = jFileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileSelected = jFileChooser.getSelectedFile();
            if (fileSelected.getName().endsWith(".txt")) {
                try {
                    data = FileUtils.readFromFileText(fileSelected.getAbsolutePath());
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                jEditorPane1.setText(data);
            } else if (fileSelected.getName().endsWith(".docx")) {
                try {
                    data = FileUtils.readFromFileDocx(fileSelected.getAbsolutePath());
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                jEditorPane1.setText(data);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid file!!!");
            }
        }
    }//GEN-LAST:event_chooseFileBtn1ActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        // TODO add your handling code here:
        if (privateKeyTx.getText().isEmpty() || privateKeyTx.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Private key is required!!!");
        } else {
            decrypt();
        }
    }//GEN-LAST:event_decryptButtonActionPerformed

    private void chooseFileBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileBtn2ActionPerformed
        // TODO add your handling code here:
        String data = "";
        int returnValue = jFileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileSelected = jFileChooser.getSelectedFile();
            if (fileSelected.getName().endsWith(".txt")) {
                try {
                    data = FileUtils.readFromFileText(fileSelected.getAbsolutePath());
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                encryptedTextTx1.setText(data);
            } else if (fileSelected.getName().endsWith(".docx")) {
                try {
                    data = FileUtils.readDocxFile(fileSelected.getAbsolutePath());
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                encryptedTextTx1.setText(data);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid file!!!");
            }
        }
    }//GEN-LAST:event_chooseFileBtn2ActionPerformed

    public void encrypt() {
        try {
            String encrypted;
            String originalText;
            BigInteger byteEncrypted;

            if (fileSelected != null && fileSelected.getName().endsWith(".docx")) {
                originalText = fileSelected.getAbsolutePath();
                byteEncrypted = rsa.encrypt(originalText);
                encrypted = Base64.getEncoder().encodeToString(byteEncrypted.toByteArray());
                encryptedTextTx.setText(encrypted);
                encryptedTextTx1.setText(encrypted);
                try {
                    FileUtils.writeFileDocx(cipherFileDocx, encrypted);
                    System.out.println("Successfully write to docx file");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                originalText = jEditorPane1.getText();
                byteEncrypted = rsa.encrypt(originalText);
                encrypted = Base64.getEncoder().encodeToString(byteEncrypted.toByteArray());
                encryptedTextTx.setText(encrypted);
                encryptedTextTx1.setText(encrypted);
                try {
                    FileUtils.writeFileText(cipherFileTxt, encrypted);
                    System.out.println("Successfully write to txt file");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void decrypt() {
        try {
            String encryptText = encryptedTextTx1.getText();
            byte[] cipher = Base64.getDecoder().decode(encryptText);
            BigInteger decrypted = rsa.decrypt(new BigInteger(cipher));
            String decrypt = new String(decrypted.toByteArray(), "UTF8");
            if (fileSelected != null && fileSelected.getName().endsWith(".docx")) {
                String data = FileUtils.readFromFileDocx(decrypt);
                jEditorPane2.setText(data);
                try {
                    FileUtils.convertToDocx(data, plainFileDocx);
                    System.out.println("Successfully write to docx file");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                jEditorPane2.setText(decrypt);
                try {
                    FileUtils.writeFileText(plainFileTxt, Jsoup.clean(decrypt, new Whitelist()));
                    System.out.println("Successfully write to txt file");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main main = new Main();
                main.setVisible(true);
                main.setResizable(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFileBtn1;
    private javax.swing.JButton chooseFileBtn2;
    private javax.swing.JButton decryptButton;
    private javax.swing.JButton encryptedButton;
    private javax.swing.JTextArea encryptedTextTx;
    private javax.swing.JTextArea encryptedTextTx1;
    private javax.swing.JButton generateKeyButton;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JTextArea privateKeyTx;
    private javax.swing.JTextArea publicKeyTx;
    // End of variables declaration//GEN-END:variables
}
